/*
 * generated by Xtext
 */
package at.bachmann.plc.st.ui;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.linking.impl.LinkingDiagnosticMessageProvider;
import org.eclipse.xtext.parser.antlr.ISyntaxErrorMessageProvider;
import org.eclipse.xtext.ui.editor.folding.DefaultFoldingRegionProvider;
import org.eclipse.xtext.ui.editor.syntaxcoloring.AbstractAntlrTokenToAttributeIdMapper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.validation.IConcreteSyntaxDiagnosticProvider;

import at.bachmann.plc.st.ui.diagnostic.STLanguageLinkingDiagnosticMessageProvider;
import at.bachmann.plc.st.ui.diagnostic.STLanguageSyntaxDiagnosticProvider;
import at.bachmann.plc.st.ui.editing.STLanguageFoldingRegionProvider;
import at.bachmann.plc.st.ui.syntaxhighlighting.STLanguageSyntaxHighlightingConfiguration;
import at.bachmann.plc.st.ui.syntaxhighlighting.STLanguageTokenToAttributeIdMapper;
import at.bachmann.plc.st.validation.STLanguageSyntaxErrorMessageProvider;

/**
 * Use this class to register components to be used within the IDE.
 */
public class STLanguageUiModule extends
		at.bachmann.plc.st.ui.AbstractSTLanguageUiModule {
	public STLanguageUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}

	public Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration() {
		return STLanguageSyntaxHighlightingConfiguration.class;
	}

	public Class<? extends AbstractAntlrTokenToAttributeIdMapper> bindDefaultAntlrTokenToAttributeIdMapper() {
		return STLanguageTokenToAttributeIdMapper.class;
	}

	public Class<? extends DefaultFoldingRegionProvider> bindDefaultFoldingRegionProvider() {
		return STLanguageFoldingRegionProvider.class;
	}

	public Class<? extends ISyntaxErrorMessageProvider> bindSyntaxErrormessageProvider() {
		return STLanguageSyntaxErrorMessageProvider.class;
	}

	public Class<? extends IConcreteSyntaxDiagnosticProvider> bindConcreteSyntaxDiagnosticProvider() {
		return STLanguageSyntaxDiagnosticProvider.class;
	}

	public Class<? extends LinkingDiagnosticMessageProvider> bindLinkingDiagnosticMessageProvider() {
		return STLanguageLinkingDiagnosticMessageProvider.class;
	}
}
